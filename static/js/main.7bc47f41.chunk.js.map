{"version":3,"sources":["store/causes.js","store/user.js","store/emails.js","store/index.js","components/Causes.js","components/utils.js","components/CauseDetail.js","components/Login.js","components/Navbar.js","components/CauseItem.js","routes.js","App.js","index.js"],"names":["defaultCauses","causeList","currentCause","defaultUser","name","location","setName","type","payload","setLocation","defaultEmails","emailList","recordEmail","cause","dispatch","fetch","method","headers","credentials","body","JSON","stringify","encodeURIComponent","then","res","json","sentEmail","catch","error","console","reducer","combineReducers","causes","state","action","map","recipient","r","email_address","transformedCause","user","emails","newSent","middleware","composeWithDevTools","applyMiddleware","thunkMiddleware","createLogger","collapsed","store","createStore","Causes","props","filterCausesBySearch","throttle","f","filterText","length","filter","c","subject","body_text","description","toLowerCase","indexOf","sortCauses","filteredCauses","sortBy","sortCausesBy","sortedCauses","concat","sort","cause1","cause2","sortField","field","ascending","reverse","renderSortableColumnName","label","stateKey","width","selectedSort","showUpArrow","showDownArrow","className","classnames","onClick","setState","prevState","prevSortBy","this","resetCurrentCause","causeItem","key","id","max","frequencies","reduce","resultObj","toString","causeId","Link","to","renderCauses","Component","connect","composeEmail","recipients","intro","signature","fullBody","toField","join","CauseDetail","getLocationText","city","handleSubmit","recordSentEmail","getCausebyId","match","params","locationText","victim_name","title","href","getCause","warn","fetchCauseById","Login","handleChange","evt","preventDefault","currentTarget","value","nameField","locationField","updateUser","htmlFor","placeholder","onChange","ownProps","Navbar","getSentEmails","sentEmails","CauseItem","handleClickItem","history","push","renderBasicCell","text","moment","created","format","withRouter","Routes","getCauseList","Switch","Route","exact","path","component","App","ReactDOM","render","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.7bc47f41.chunk.js","sourcesContent":["\n/**\n * INITIAL STATE\n */\nconst defaultCauses = {\n  causeList: [],\n  currentCause: {}\n}\n\n/**\n * ACTION TYPES\n */\nconst GET_CAUSES = 'GET_CAUSES'\nconst GET_CAUSE = 'GET_CAUSE'\nconst CLEAR_CURRENT_CAUSE = 'CLEAR_CURRENT_CAUSE'\n\n/**\n * ACTION CREATORS\n */\nexport const getCauses = function (causeList) {\n  return {\n    type: GET_CAUSES,\n    payload: causeList\n  }\n}\n\nexport const getCause = function (cause) {\n  return {\n    type: GET_CAUSE,\n    payload: cause\n  }\n}\n\nexport const clearCause = function () {\n  return {\n    type: CLEAR_CURRENT_CAUSE,\n\n  }\n}\n\n/**\n * THUNK CREATORS\n */\n\nexport const fetchCauseById = (id) => {\n  return function thunk(dispatch) {\n    return fetch(`http://127.0.0.1:8000/emails/cause/${id}`, {  // TODO: fix this\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      credentials: 'same-origin',\n    })\n    .then(res => res.json())\n    .then(cause => {\n        dispatch(getCause(cause))\n    })\n    .catch(error => console.warn(error))\n  }\n}\n\nexport function fetchCauses() {\n  return function thunk(dispatch) {\n    return fetch(`http://127.0.0.1:8000/emails/cause/`, {  // TODO: fix this\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      credentials: 'same-origin',\n    })\n    .then(res => res.json())\n    .then(causes => {\n      dispatch(getCauses(causes))\n    })\n    .catch(error => console.warn(error))\n  }\n}\n\nexport function clearCurrentCause() {\n  return function thunk(dispatch) {\n    return dispatch(clearCause())\n  }\n}\n\n/**\n * REDUCER\n */\nexport default function reducer(state = defaultCauses, action) {\n  switch (action.type) {\n    case GET_CAUSES:\n      const causes = action.payload\n      if (!causes) return state\n      return {\n        ...state,\n        causeList: causes.map(cause => ({\n          ...cause,\n          recipient: cause.recipient.map(r => r.email_address),\n        }))\n      }\n    case GET_CAUSE:\n      const cause = action.payload\n      const transformedCause = {\n        ...cause,\n        recipient: cause.recipient.map(r => r.email_address),\n      }\n      return {\n        ...state,\n        currentCause: transformedCause || state.currentCause\n      }\n      case CLEAR_CURRENT_CAUSE:\n          return {\n            ...state,\n            currentCause: {}\n          }\n    default:\n      return state;\n  }\n}\n","/**\n * INITIAL STATE\n */\nconst defaultUser = {\n  name: \"\",\n  location: \"\"\n};\n\n/**\n * ACTION TYPES\n */\nconst SET_NAME = 'SET_NAME';\nconst SET_LOCATION = 'SET_LOCATION'\n\n/**\n * ACTION CREATORS\n */\nexport const setName = function (name) {\n  return {\n    type: SET_NAME,\n    payload: name\n  };\n};\n\nexport const setLocation = function (location) {\n    return {\n      type: SET_LOCATION,\n      payload: location\n    };\n  };\n\n/**\n * THUNK CREATORS\n */\n\nexport const setUserName = (name) => {\n  return function thunk(dispatch) {\n      dispatch(setName(name))\n  }\n}\n\nexport const setUserLocation = (location) => {\n    return function thunk(dispatch) {\n        dispatch(setLocation(location))\n    }\n  }\n\n/**\n * REDUCER\n */\nexport default function reducer(state = defaultUser, action) {\n  switch (action.type) {\n    case SET_NAME:\n      return {\n        ...state,\n        name: action.payload\n      }\n    case SET_LOCATION:\n      return {\n        ...state,\n        location: action.payload\n      }\n    default:\n      return state;\n  }\n}\n","\n/**\n * INITIAL STATE\n */\nconst defaultEmails = {\n    emailList: [],\n  }\n\n  /**\n   * ACTION TYPES\n   */\n  const GET_EMAILS = 'GET_EMAILS'\n  const CREATE_SENT = 'CREATE_SENT'\n\n  /**\n   * ACTION CREATORS\n   */\n  export const getEmails = function (emailList) {\n    return {\n      type: GET_EMAILS,\n      payload: emailList\n    }\n  }\n\n  export const createSent = function (email) {\n      return {\n        type: CREATE_SENT,\n        payload: email\n      }\n    }\n\n  /**\n   * THUNK CREATORS\n   */\n\n  export function fetchSentEmails() {\n    return function thunk(dispatch) {\n      return fetch('http://127.0.0.1:8000/emails/sent/', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'same-origin',\n      })\n      .then(res => res.json())\n      .then(sentEmails => {\n        dispatch(getEmails(sentEmails))\n      })\n      .catch(error => console.warn(error))\n    }\n  }\n\n   export const recordEmail = (name, cause) => {\n    return function thunk(dispatch) {\n        return fetch('http://127.0.0.1:8000/emails/sent/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'same-origin',\n            body: JSON.stringify({cause, name: encodeURIComponent(name)})\n        })\n        .then(res => res.json())\n        .then(sentEmail => {\n            dispatch(createSent(sentEmail))\n        })\n        .catch(error => {\n            console.error(error)\n        })\n    }\n  }\n\n  /**\n   * REDUCER\n   */\n  export default function reducer(state = defaultEmails, action) {\n    switch (action.type) {\n      case GET_EMAILS:\n        return {\n          ...state,\n          emailList: action.payload || state.emailList\n        }\n      case CREATE_SENT:\n        const newSent = action.payload\n        if (!newSent) return state\n        return {\n            ...state,\n            emailList: [...state.emailList, newSent]\n          }\n      default:\n        return state;\n    }\n  }\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport createLogger from 'redux-logger'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport causes from './causes'\nimport user from './user'\nimport emails from './emails'\n\nconst reducer = combineReducers({\n  causes,\n  user,\n  emails,\n})\n\nconst middleware = composeWithDevTools(applyMiddleware(\n  thunkMiddleware,\n  createLogger({ collapsed: true })\n))\nconst store = createStore(reducer, middleware)\n\nexport default store\nexport * from './causes'\nexport * from './user'\nexport * from './emails'\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport classnames from 'classnames'\nimport { throttle } from 'lodash'\n\nimport { clearCurrentCause } from '../store/causes'\nimport { CauseItem } from './'\n\nimport './Causes.css'\n\nexport class Causes extends Component {\n\n    constructor(props: PropsT) {\n        super(props)\n        this.state = {\n          filterText: '',\n          sortCausesBy: { field: 'created', ascending: true },\n        }\n    }\n\n    componentDidMount() {\n      this.props.resetCurrentCause()\n    }\n\n    filterCausesBySearch = throttle(() => {\n        const { filterText: f } = this.state\n        const { causes: {causeList} } = this.props\n        if (!f.length) return causeList\n        return causeList.filter(c => {\n            const causeText = `${c.subject} ${c.body_text} ${c.description || \"\"}`\n            return causeText.toLowerCase().indexOf(f) >= 0\n        })\n    }, 200)\n\n    sortCauses = causes => {\n        const { filterText: f } = this.state\n        const { causes: {causeList} } = this.props\n        const filteredCauses = f.length ? this.filterCausesBySearch() : causeList\n        const sortBy = this.state.sortCausesBy\n        if(!sortBy) return\n        const sortedCauses = filteredCauses.concat().sort((cause1, cause2) => {\n            const sortField = sortBy.field\n            return cause1[sortField] < cause2[sortField] ? -1 : 1\n        })\n        if (sortBy && !sortBy.ascending) sortedCauses.reverse()\n        return sortedCauses\n    }\n\n    renderSortableColumnName = (\n        label: string,\n        field: string,\n        stateKey: string,\n        width: string | number\n      ) => {\n        const sortBy = this.state[stateKey]\n        // True if the user has selected to sort by this column\n        const selectedSort = sortBy && sortBy.field === field\n        const showUpArrow = !selectedSort || sortBy.ascending\n        const showDownArrow = !selectedSort || !sortBy.ascending\n        return (\n          <span\n            className={classnames(\n              ['sortable-column-header', 'center', `small-${width}`],\n              { 'is-selected-sort': selectedSort }\n            )}\n            onClick={() =>\n              this.setState(prevState => {\n                const prevSortBy = this.state[stateKey]\n                return {\n                  [stateKey]: {\n                    field,\n                    // Sort ascending if switching to this tab; otherwise toggle previous state.\n                    ascending: !prevSortBy || prevSortBy.field !== field || !prevSortBy.ascending,\n                  },\n                }\n              })\n            }\n          >\n            <span className=\"name\">{label}</span>\n            <span className=\"sort-arrows\">\n              {showUpArrow && <span className=\"Arrow Arrow--up\" />}\n              {showDownArrow && <span className=\"Arrow Arrow--down\" />}\n            </span>\n          </span>\n        )\n      }\n\n      renderCauses() {\n        const { causes: {causeList}} = this.props\n\n        return (\n          <section className=\"all-causes\">\n            <header className=\"table-headers\">\n              <span className=\"small-1\">Email</span>\n              <span className=\"small-2 center\">Subject</span>\n              {this.renderSortableColumnName('Victim', 'victim_name', 'sortCausesBy', 1)}\n              {this.renderSortableColumnName('State', 'state', 'sortCausesBy', 1)}\n              <span className=\"small-4 center\">Email Body</span>\n              {this.renderSortableColumnName('Added', 'created', 'sortCausesBy', 1)}\n              {/* is kind of hacky but gives the correct class to email */}\n            </header>\n            <ul>\n                {\n                    this.sortCauses(causeList).map(causeItem =>\n                    <li key={`causeItem ${causeItem.id}`}>\n                        <CauseItem cause={causeItem} />\n                    </li>\n                )\n                }\n            </ul>\n          </section>\n        )\n      }\n\n    render() {\n      const { emails: {emailList} } = this.props\n      let max = null\n      if(emailList && emailList.length) {\n        const frequencies = emailList.reduce((resultObj, cause) => {\n          const id = cause.id.toString()\n          if (id in resultObj) resultObj[id]++;\n          else resultObj[id] = 1;\n          return resultObj\n        }, {})\n        for (const causeId in frequencies) {\n          if (!max) max = causeId\n          else if(frequencies[max] < frequencies[causeId]) {\n            max = causeId\n          }\n        }\n      }\n\n      return (\n          <div className=\"casues-page\">\n            <h2>Take Action and Support These Causes</h2>\n            <p className=\"causes-summary\">\n                Review the below causes and if any of them resonante with you, TAKE ACTION and send an email demanding justice.  You are encouraged to edit the body of the email to add your specific opinion about the situation, custom emails are always more impactful; however, if time does not allow, sending a templated email is better than nothing at all!\n            </p>\n            {\n              max &&\n              <Link to={`/causes/${max}`} className='most-popular'>\n                Most Popular Cause\n              </Link>\n            }\n            {this.renderCauses()}\n          </div>\n      )\n    }\n  }\n\n\nconst mapStateToProps = (state) => {\n    return {\n        causes: state.causes,\n        emails: state.emails,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      resetCurrentCause: () => {\n        dispatch(clearCurrentCause())\n      },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Causes)\n","\nexport const composeEmail = (recipients, subject, body, user) => {\n    const intro = user && user.name && user.location ? `My name is ${user.name}. I am a resident of ${user.location} and ` : \"\"\n    const signature = user && user.name ?\n    `Sincerely, ${user.name}` :\n    'Thank You.'\n    const fullBody = `${intro}${body}\n    ${signature}`\n    const toField = recipients ? recipients.join(\", \") : \"\"\n    return {toField, subject, fullBody}\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { fetchCauseById } from '../store/causes'\nimport { recordEmail } from '../store/emails'\nimport { composeEmail } from './utils'\n\nimport './CauseDetail.css'\n\nexport class CauseDetail extends Component{\n    componentDidMount() {\n        this.props.getCausebyId(this.props.match.params.id)\n    }\n\n    getLocationText = (city, state) => {\n      if (!city && !state) return \"\"\n      return [city, state].join(\", \")\n    }\n\n    handleSubmit = () => {\n      const { causes: {currentCause}, user, recordSentEmail } = this.props\n      recordSentEmail(user.name, currentCause.id)\n  }\n\n    render() {\n      const { causes: {currentCause}, user } = this.props\n      if (!currentCause || !currentCause.subject) return null\n      const {toField, subject, fullBody} = composeEmail(currentCause.recipient, currentCause.subject, currentCause.body_text, user)\n      const locationText = this.getLocationText(currentCause.city, currentCause.state)\n      return (\n        <div className=\"cause-detail-container\">\n          <h1>{`${currentCause.subject}`}</h1>\n          {\n            currentCause.victim_name &&\n            <div className=\"field-item\">\n              <span className=\"bold\">Victim: </span>\n              <span>{currentCause.victim_name}</span>\n            </div>\n          }\n          {\n            locationText &&\n            <div className=\"field-item\">\n              <span className=\"bold\">Location: </span>\n              <span>{locationText}</span>\n            </div>\n          }\n          {\n            currentCause.description &&\n            <div className=\"field-item\">\n              <span className=\"bold\">Description of Cause: </span>\n              <span>{currentCause.description}</span>\n            </div>\n          }\n          <div title=\"Send an Email!\">\n              <a className=\"button button-primary\"\n                onClick={this.handleSubmit}\n                href={`mailto:${toField}?subject=${subject}&body=${fullBody}`}\n              >\n                <p className=\"primary-text\">Demand Justice</p>\n              </a>\n          </div>\n          <div className=\"field-item\">\n              <span className=\"bold\">PLEASE consider taking action and emailing the relevant decision makers! Click this button to auto-populate your email.  You are encouraged to edit the body of the email to add your specific opinion about the situation, custom emails are always more impactful; however, if time does not allow, sending a templated email is better than nothing at all!  </span>\n          </div>\n          <div className=\"field-item\">\n              <span className=\"bold\">Email Body Template: </span>\n              <span>{currentCause.body_text}</span>\n          </div>\n\n        </div>\n      )\n    }\n  }\n\n  const mapStateToProps = (state) => {\n    return {\n        user: state.user,\n        causes: state.causes\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      getCausebyId: (id) => {\n        dispatch(fetchCauseById(id))\n      },\n      recordSentEmail: (name, cause) => {\n        dispatch(recordEmail(name, cause))\n      },\n    }\n  }\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CauseDetail)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { setName, setLocation } from '../store/user'\n\nimport './Login.css'\n\nexport class Login extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            nameField: props.user.name,\n            locationField: props.user.location,\n        }\n    }\n\n    handleChange = (evt) => {\n        evt.preventDefault()\n        this.setState({\n            [evt.currentTarget.id]: evt.currentTarget.value\n        })\n    }\n\n    handleSubmit= (evt) => {\n        evt.preventDefault()\n        const { nameField, locationField } = this.state\n        this.props.updateUser(nameField, locationField)\n    }\n\n    render() {\n        const { nameField, locationField } = this.state\n        return (\n            <form className=\"login-form\">\n                <label htmlFor=\"nameField\">Name</label>\n                <input\n                    type=\"text\"\n                    placeholder=\"Name as it will appear in emails\"\n                    id=\"nameField\"\n                    value={nameField}\n                    onChange={this.handleChange}\n                />\n                <label htmlFor=\"locationField\">Location</label>\n                <input\n                    type=\"text\"\n                    placeholder=\"Your location as it will appear in emails\"\n                    id=\"locationField\"\n                    value={locationField}\n                    onChange={this.handleChange}\n                />\n                <input className=\"button-primary\" type=\"submit\" value=\"Send\" onClick={this.handleSubmit}/>\n            </form>\n        )\n    }\n  }\n\n\n  const mapStateToProps = (state, ownProps) => {\n        return {\n        user: state.user,\n        }\n  }\n\n  const mapDispatchToProps = (dispatch) => {\n    return {\n      updateUser: (name, location) => {\n        dispatch(setName(name))\n        dispatch(setLocation(location))\n      },\n    }\n  }\n\n  export default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport { fetchSentEmails } from '../store/emails'\n\nimport './Navbar.css'\n\nexport class Navbar extends Component {\n  componentDidMount() {\n    this.props.getSentEmails()\n  }\n  render() {\n    const emailList = this.props.emails.emailList\n    return (\n      <nav>\n      <div className='nav-bar'>\n        <h4>{`${emailList.length} Emails Sent!`}</h4>\n        <h3>Email Action Database</h3>\n        <Link to=\"/causes\" >\n          <button className=\"navLink\" >Cause List</button>\n        </Link>\n      </div>\n      </nav>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      emails: state.emails,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      getSentEmails: () => {\n      dispatch(fetchSentEmails())\n    },\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\n\nimport { recordEmail } from '../store/emails'\nimport { composeEmail } from './utils'\n\nimport './Causes.css'\n\nexport  class CauseItem extends Component {\n\n    handleClickItem = () => {\n        const { cause, history } = this.props\n        history.push(`/causes/${cause.id}`)\n    }\n\n    handleSubmit = () => {\n        const { cause, user, recordSentEmail } = this.props\n        recordSentEmail(user.name, cause.id)\n    }\n\n    renderBasicCell = (text, width) => {\n        return (\n            <p className={`small-${width} cause-cell`} title=\"Click For More Information\" onClick={this.handleClickItem}>{text}</p>\n        )\n    }\n\n    render() {\n        const { cause, user } = this.props\n        if (!cause) return null\n        const {toField, subject, fullBody} = composeEmail(cause.recipient, cause.subject, cause.body_text, user)\n      return (\n          <div className=\"casues-page\">\n            <div className=\"item-container\">\n                <a className=\"button small-1 button-outline cause-cell\"\n                    title=\"Take Action!\"\n                    onClick={this.handleSubmit}\n                    href={`mailto:${toField}?subject=${subject}&body=${fullBody}`}\n                >\n                    <p>Email</p>\n                </a>\n                {this.renderBasicCell(cause.subject, 2)}\n                {this.renderBasicCell(cause.victim_name || \"\", 1)}\n                {this.renderBasicCell(cause.state || \"\", 1)}\n                {this.renderBasicCell(cause.body_text || \"\", 4)}\n                {this.renderBasicCell(moment(cause.created).format('MM/DD/YYYY'), 1)}\n            </div>\n          </div>\n      )\n    }\n  }\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        recordSentEmail: (name, cause) => {\n            dispatch(recordEmail(name, cause))\n        },\n    }\n}\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CauseItem))\n","import React, { Component } from 'react'\nimport { Route, Switch, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { fetchCauses } from './store/causes'\n\nimport {\n  Causes,\n  CauseDetail,\n  Login\n} from './components'\n\n\nexport class Routes extends Component {\n    componentDidMount() {\n        this.props.getCauseList()\n    }\n\n    render() {\n        const { user: { name, location} } = this.props\n    return (\n        <Switch>\n            {\n                name && location &&\n                <Switch>\n                    <Route exact path=\"/causes/\" component={Causes} />\n                    <Route path=\"/causes/:id\" component={CauseDetail} />\n                    <Route exact path=\"/\" component={Causes} />\n                </Switch>\n            }\n            <Route path=\"/\" component={Login} />\n        </Switch>\n    )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      getCauseList: () => {\n        dispatch(fetchCauses())\n      },\n    }\n  }\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Routes))\n","\nimport React, { Component } from 'react'\n\nimport { Navbar } from './components'\nimport Routes from './routes'\n\n\nexport default class App extends Component {\n\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <Routes />\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './store/index'\nimport App from './App'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('app')\n)\n"],"sourceRoot":""}